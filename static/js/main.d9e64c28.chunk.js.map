{"version":3,"sources":["Flip.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Flip","props","useState","flipped","set","useSpring","opacity","transform","config","mass","tension","friction","onClick","state","div","className","style","to","o","front","rotateX","back","App","styles","loop","from","color","cardBuilder","l","Card","sx","minWidth","minHeight","background","CardContent","map","s","Typography","fontSize","fontFamily","gutterBottom","Date","getFullYear","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"0OAGe,SAASA,EAAKC,GACzB,MAAuBC,oBAAS,GAAhC,mBAAOC,EAAP,KAAgBC,EAAhB,KACF,EAA+BC,oBAAU,CACvCC,QAASH,EAAU,EAAI,EACvBI,UAAU,8BAAD,OAAgCJ,EAAU,IAAM,EAAhD,QACTK,OAAQ,CAAEC,KAAM,EAAGC,QAAS,IAAKC,SAAU,MAHrCJ,EAAR,EAAQA,UAAWD,EAAnB,EAAmBA,QAKjB,OACA,sBAAKM,QAAS,kBAAMR,GAAI,SAAAS,GAAK,OAAKA,MAAlC,UAA0C,cAAC,IAAEC,IAAH,CACtCC,UAAU,IACVC,MAAO,CAAEV,QAASA,EAAQW,IAAG,SAAAC,GAAC,OAAI,EAAIA,KAAIX,aAFJ,SAKrCN,EAAMkB,QAET,cAAC,IAAEL,IAAH,CACCC,UAAU,IACTC,MAAO,CACLV,UACAC,YACAa,QAAS,UALb,SASEnB,EAAMoB,UCkBCC,MArCf,WACE,IAAMC,EAASlB,oBAAU,CACvBmB,MAAK,EACLC,KAAM,CAACnB,QAAS,EAAGoB,MAAO,QAC1BT,GAAI,CAACX,QAAS,EAAGoB,MAAO,WAGpBC,EAAc,SAACC,GACnB,OACE,cAACC,EAAA,EAAD,CAAMC,GAAI,CAAEC,SAAU,IAAKC,UAAW,IAAKC,WAAY,WAAvD,SACA,cAACC,EAAA,EAAD,UACGN,EAAEO,KAAI,SAACC,GAAD,OACL,cAACC,EAAA,EAAD,CAAYP,GAAI,CAAEQ,SAAU,GAAIC,WAAW,WAAab,MAAM,QAAQc,cAAY,EAAlF,SACCJ,YAOT,OACE,eAAC,WAAStB,IAAV,CAAeE,MAAOO,EAAtB,UACE,mBAAGR,UAAU,WAAb,+CACA,sBAAKA,UAAU,YAAf,UACE,cAACf,EAAD,CACAmB,MAAOQ,EAAY,CAAC,aACpBN,KAAMM,EAAY,CAAC,iBAAD,gBAA2B,IAAIc,MAAOC,cAAgB,MAAQ,4BAEhF,cAAC1C,EAAD,CACAmB,MAAOQ,EAAY,CAAC,iBACpBN,KAAMM,EAAY,CAAC,sDCxBZgB,G,MAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,QCHdQ,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d9e64c28.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { useSpring, a } from 'react-spring'\r\n\r\nexport default function Flip(props:any){\r\n    const [flipped, set] = useState(false)\r\n  const { transform, opacity } = useSpring({\r\n    opacity: flipped ? 1 : 0,\r\n    transform: `perspective(600px) rotateX(${flipped ? 180 : 0}deg)`,\r\n    config: { mass: 5, tension: 500, friction: 80 },\r\n  })\r\n    return ( \r\n    <div onClick={() => set(state => !state)}><a.div\r\n        className='c'\r\n        style={{ opacity: opacity.to(o => 1 - o), transform }}\r\n      >\r\n        {/* {cardBuilder(['About Me'])} */}\r\n        {props.front}\r\n      </a.div>\r\n      <a.div\r\n       className='c'\r\n        style={{\r\n          opacity,\r\n          transform,\r\n          rotateX: '180deg',\r\n        }}\r\n      >\r\n       {/* {cardBuilder(['Name: Henry Yu', `Age: ${new Date().getFullYear() - 1996}`, 'Hobbies: Sleep, Video'])} */}\r\n       {props.back}\r\n      </a.div>\r\n    </div>\r\n    );\r\n}","import React from 'react'\nimport { useSpring, animated, a } from 'react-spring'\nimport './App.css';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport Typography from '@mui/material/Typography';\nimport Flip from './Flip'\n\nfunction App() {\n  const styles = useSpring({\n    loop:false,\n    from: {opacity: 0, color: '#333'},\n    to: {opacity: 1, color: 'white'}\n  })\n\n  const cardBuilder = (l:Array<any>)=>{\n    return (\n      <Card sx={{ minWidth: 275, minHeight: 275, background: '#424242' }}>\n      <CardContent>\n        {l.map((s:any) => (\n          <Typography sx={{ fontSize: 14, fontFamily:'Raleway' }} color=\"white\" gutterBottom>\n          {s}\n        </Typography>\n        ))}\n      </CardContent>\n    </Card>\n    )\n  }\n  return (\n    <animated.div  style={styles}>\n      <p className='centered'>Hi, my name is Henry and welcome.</p>\n      <div className=\"container\">\n        <Flip \n        front={cardBuilder(['About Me'])}\n        back={cardBuilder(['Name: Henry Yu', `Age: ${new Date().getFullYear() - 1996}`, 'Hobbies: Sleep, Video'])}\n        ></Flip>\n        <Flip \n        front={cardBuilder(['Work Related'])}\n        back={cardBuilder(['Working in progress (╥﹏╥)'])}\n        ></Flip>\n      </div>\n    </animated.div>\n  );\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}